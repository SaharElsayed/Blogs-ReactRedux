{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.component.js","components/PostList.components.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","dispatch","a","jsonPlaceholder","get","response","type","payload","data","fetchUser","id","UserHeader","this","props","userId","user","className","name","React","Component","connect","state","ownProps","users","find","PostList","renderList","posts","map","post","key","title","body","fetchPostsAndUsers","getState","_","chain","uniq","forEach","value","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDom","render","document","getElementById"],"mappings":"gSAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,yCCWAC,EAAa,wDAAM,WAAMC,GAAN,eAAAC,EAAA,qEACLC,EAAgBC,IAAI,UADf,OACtBC,EADsB,OAG5BJ,EAAS,CAAEK,KAAM,cAAeC,QAASF,EAASG,OAHtB,yCAAN,uDAMbC,EAAY,SAACC,GAAD,6CAAQ,WAAMT,GAAN,eAAAC,EAAA,qEACNC,EAAgBC,IAAhB,iBAA8BM,IADxB,OACvBL,EADuB,OAG7BJ,EAAS,CAAEK,KAAM,aAAcC,QAASF,EAASG,OAHpB,yCAAR,uDChBnBG,E,4LAEEC,KAAKC,MAAMJ,UAAUG,KAAKC,MAAMC,U,+BAG1B,IACEC,EAASH,KAAKC,MAAdE,KAER,OAAKA,EAGE,yBAAKC,UAAU,UAAUD,EAAKE,MAF1B,S,GATMC,IAAMC,WAkBhBC,cAHS,SAACC,EAAOC,GAC5B,MAAO,CAAEP,KAAMM,EAAME,MAAMC,KAAK,SAAAT,GAAI,OAAIA,EAAKL,KAAOY,EAASR,WAEzB,CAAEL,aAA3BW,CAAwCT,GCjBjDc,E,2MAKFC,WAAa,WACT,OAAO,EAAKb,MAAMc,MAAMC,IAAI,SAAAC,GACxB,OACI,yBAAKb,UAAU,OAAOc,IAAKD,EAAKnB,IAC5B,uBAAGM,UAAU,mCACb,yBAAKA,UAAU,WACX,yBAAKA,UAAU,eACX,4BAAKa,EAAKE,OACV,2BAAIF,EAAKG,OAEb,kBAAC,EAAD,CAAYlB,OAAQe,EAAKf,c,mFAbzCF,KAAKC,MAAMoB,uB,+BAoBX,OAAO,yBAAKjB,UAAU,2BAA2BJ,KAAKc,kB,GAtBvCR,IAAMC,WA8BdC,cAJS,SAACC,GACrB,MAAO,CAAEM,MAAON,EAAMM,QAGc,CAAEM,mBFhCR,wDAAM,WAAOhC,EAAUiC,GAAjB,SAAAhC,EAAA,qEAC9BD,EAASD,KADqB,OAGpCmC,IAAEC,MAAMF,IAAWP,OACdC,IAAI,UACJS,OACAC,QAAQ,SAAA5B,GAAE,OAAIT,EAASQ,EAAUC,MACjC6B,QAP+B,yCAAN,0DEgCnBnB,CAAiDK,GCxBjDe,EARH,WACR,OACI,yBAAKxB,UAAU,gBACX,kBAAC,EAAD,Q,QCDGyB,cAAgB,CAC3Bd,MCNW,WAAyB,IAAxBN,EAAuB,uDAAf,GAAIqB,EAAW,uCACnC,OAAQA,EAAOpC,MACX,IAAK,cACD,OAAOoC,EAAOnC,QAElB,QACI,OAAOc,IDCfE,MEPW,WAAyB,IAAxBF,EAAuB,uDAAf,GAAIqB,EAAW,uCACnC,OAAQA,EAAOpC,MACX,IAAK,aACD,MAAM,GAAN,mBAAWe,GAAX,CAAkBqB,EAAOnC,UAE7B,QACI,OAAOc,MCGbsB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAEJO,SAASC,eAAe,W","file":"static/js/main.7bd5e561.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://jsonplaceholder.typicode.com'\r\n})","import _ from 'lodash';\r\nimport jsonPlaceholder from '../apis/jsonPlaceholder';\r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\r\n    await dispatch(fetchPosts());\r\n\r\n    _.chain(getState().posts)\r\n        .map('userId')\r\n        .uniq()\r\n        .forEach(id => dispatch(fetchUser(id)))\r\n        .value();\r\n}\r\n\r\n\r\nexport const fetchPosts = () => async dispatch => {\r\n    const response = await jsonPlaceholder.get('/posts');\r\n\r\n    dispatch({ type: 'FETCH_POSTS', payload: response.data })\r\n}\r\n\r\nexport const fetchUser = (id) => async dispatch => {\r\n    const response = await jsonPlaceholder.get(`/users/${id}`);\r\n\r\n    dispatch({ type: 'FETCH_USER', payload: response.data })\r\n}\r\n\r\n// export const fetchUser = id => dispatch => _fetchUser(id, dispatch);\r\n// const _fetchUser = _.memoize(async (id, dispatch) => {\r\n//     const response = await jsonPlaceholder.get(`/users/${id}`);\r\n\r\n//     dispatch({ type: 'FETCH_USER', payload: response.data })\r\n// });","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUser } from '../actions';\r\n\r\nclass UserHeader extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchUser(this.props.userId)\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.props\r\n\r\n        if (!user) {\r\n            return null;\r\n        }\r\n        return <div className='header'>{user.name}</div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { user: state.users.find(user => user.id === ownProps.userId) }\r\n}\r\nexport default connect(mapStateToProps, { fetchUser })(UserHeader);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPostsAndUsers } from '../actions';\r\nimport UserHeader from './UserHeader.component';\r\n\r\nclass PostList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchPostsAndUsers();\r\n    }\r\n\r\n    renderList = () => {\r\n        return this.props.posts.map(post => {\r\n            return (\r\n                <div className=\"item\" key={post.id}>\r\n                    <i className='large middle aligned icon user' />\r\n                    <div className='content'>\r\n                        <div className='description'>\r\n                            <h2>{post.title}</h2>\r\n                            <p>{post.body}</p>\r\n                        </div>\r\n                        <UserHeader userId={post.userId} />\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n    }\r\n    render() {\r\n        return <div className='ui relaxed divided list'>{this.renderList()}</div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { posts: state.posts }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchPostsAndUsers })(PostList);","import React from 'react';\r\nimport PostList from './PostList.components';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container\">\r\n            <PostList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport postsReducer from './postsReducer';\r\nimport usersReducer from './usersReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    posts: postsReducer,\r\n    users: usersReducer\r\n});","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_POSTS': {\r\n            return action.payload;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_USER': {\r\n            return [...state, action.payload];\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDom.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}